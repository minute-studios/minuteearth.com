{"remainingRequest":"/home/travis/build/minute-studios/minuteearth.com/node_modules/thread-loader/dist/cjs.js!/home/travis/build/minute-studios/minuteearth.com/node_modules/babel-loader/lib/index.js!/home/travis/build/minute-studios/minuteearth.com/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/travis/build/minute-studios/minuteearth.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/travis/build/minute-studios/minuteearth.com/src/components/responsive-embed.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/travis/build/minute-studios/minuteearth.com/src/components/responsive-embed.vue","mtime":1634758077400},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/cache-loader/dist/cjs.js","mtime":1634758109166},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/thread-loader/dist/cjs.js","mtime":1634758109383},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/babel-loader/lib/index.js","mtime":1634758101210},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/cache-loader/dist/cjs.js","mtime":1634758109166},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/vue-loader/lib/index.js","mtime":1634758109392}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nexport default {\n  name: 'responsive-embed',\n  props: {\n    ratio: {\n      type: Number,\n      default: 1\n    },\n    maxWidth: Number\n  },\n  data: function data() {\n    return {};\n  },\n  components: {},\n  mounted: function mounted() {} // , computed: {\n  // }\n  ,\n  methods: {}\n};",{"version":3,"sources":["responsive-embed.vue"],"names":[],"mappings":";;;;;;AAOA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AALA,GAFA;AASA,EAAA,IAAA,EAAA;AAAA,WAAA,EAAA;AAAA,GATA;AAWA,EAAA,UAAA,EAAA,EAXA;AAaA,EAAA,OAbA,qBAaA,CACA,CAdA,CAeA;AACA;AAhBA;AAiBA,EAAA,OAAA,EAAA;AAjBA,CAAA","sourcesContent":["<template lang=\"pug\">\n.responsive-embed-wrap(:style=\"{ maxWidth: maxWidth + 'px' }\")\n  .responsive-embed(:style=\"{ paddingTop: (1/ratio * 100) + '%' }\")\n    slot\n</template>\n\n<script>\nexport default {\n  name: 'responsive-embed'\n  , props: {\n    ratio: {\n      type: Number\n      , default: 1\n    }\n    , maxWidth: Number\n  }\n  , data: () => ({\n  })\n  , components: {\n  }\n  , mounted(){\n  }\n  // , computed: {\n  // }\n  , methods: {\n  }\n}\n</script>\n\n<style lang=\"sass\">\n@import '@/styles/_variables.scss'\n.responsive-embed-wrap\n  margin: auto\n.responsive-embed\n  position: relative\n  > *\n    position: absolute\n    top: 0\n    left: 0\n    right: 0\n    bottom: 0\n    width: 100%\n    height: 100%\n</style>\n"],"sourceRoot":"src/components"}]}