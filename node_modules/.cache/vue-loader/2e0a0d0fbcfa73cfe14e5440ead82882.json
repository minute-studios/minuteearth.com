{"remainingRequest":"/home/travis/build/minute-studios/minuteearth.com/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/travis/build/minute-studios/minuteearth.com/src/components/latest-videos.vue?vue&type=style&index=0&lang=sass&","dependencies":[{"path":"/home/travis/build/minute-studios/minuteearth.com/src/components/latest-videos.vue","mtime":1565137835048},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/css-loader/index.js","mtime":1565137878517},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1565137878721},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/postcss-loader/src/index.js","mtime":1565137878688},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/sass-loader/lib/loader.js","mtime":1565137883870},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/cache-loader/dist/cjs.js","mtime":1565137878429},{"path":"/home/travis/build/minute-studios/minuteearth.com/node_modules/vue-loader/lib/index.js","mtime":1565137878721}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import '@/styles/_variables.scss'\n.latest-videos\n  max-width: 720px\n  margin: auto\n  ul.pagination-list\n    list-style: none\n    margin: 0\n    li + li\n      margin: 0\n",{"version":3,"sources":["latest-videos.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"latest-videos.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n.latest-videos\n  .card\n    .card-image\n      b-loading(:is-full-page=\"false\", :active=\"!isReady\")\n      responsive-embed(:ratio=\"16/9\", :max-width=\"720\")\n        youtube(:video-id=\"videos[current-1].videoId\", :fit-parent=\"true\", :resize=\"true\", @ready=\"isReady = true\")\n    .card-content\n      .has-text-centered {{ videos[current-1].title }}\n    .card-footer\n      .card-footer-item\n        b-pagination(\n          v-if=\"videos.length\"\n          , :total=\"videos.length\"\n          , :current.sync=\"current\"\n          , :per-page=\"1\"\n          , :range-before=\"5\"\n          , :range-after=\"5\"\n          , order=\"is-centered\"\n          , size=\"is-large\"\n          , aria-next-label=\"Next video\"\n          , aria-previous-label=\"Previous video\"\n          , aria-page-label=\"Video\"\n          , aria-current-label=\"Current Video\"\n        )\n</template>\n\n<script>\nconst apiKey = 'AIzaSyDd-UD-gIX2GIOlE6YOQtk0S7KEmps1bTg'\nconst playlistId = 'UUeiYXex_fwgYDonaTcSIk6w' // latest videos from youtube\nconst maxVideos = 5\nconst url = `https://www.googleapis.com/youtube/v3/playlistItems?part=snippet%2CcontentDetails&maxResults=${maxVideos}&playlistId=${playlistId}&key=${apiKey}`\n\nexport default {\n  name: 'latest-videos'\n  , props: {\n  }\n  , data: () => ({\n    videos: []\n    , current: 1\n    , isReady: false\n  })\n  , components: {\n  }\n  , mounted(){\n    fetch(url).then(res => res.json()).then(data => {\n      if ( !data.items || !data.items.length ){\n        throw new Error('Could not find videos.')\n      }\n\n      this.videos = data.items.map( item => ({\n        title: item.snippet.title\n        , ...item.contentDetails\n      }) )\n    }).catch( err => {\n      console.error(err)\n    })\n  }\n  // , computed: {\n  // }\n  , methods: {\n  }\n}\n</script>\n\n<style lang=\"sass\">\n@import '@/styles/_variables.scss'\n.latest-videos\n  max-width: 720px\n  margin: auto\n  ul.pagination-list\n    list-style: none\n    margin: 0\n    li + li\n      margin: 0\n</style>\n"]}]}